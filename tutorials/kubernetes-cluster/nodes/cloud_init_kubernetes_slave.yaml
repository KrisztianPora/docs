#cloud-configc

write_files:
################################
# Kubeuser KEYS
################################
- path: /tmp/kubeuser/id_rsa
  content: |
    {{variables.kubemaster_private_key}}
  permissions: '600'
- path: /tmp/kubeuser/authorized_keys
  content: |
    {{variables.kubemaster_public_key}}
  permissions: '600'
################################
# SCRIPT TO DEPLOY kubeuser KEY
################################
- path: /tmp/initial.sh
  content: |
    #!/bin/bash
    set -ex

    echo "Setup preparation starts."
    useradd -s /bin/bash -d /home/kubeuser/ -m -G sudo kubeuser
    echo "kubeuser:kubeuser" | chpasswd
    usermod -aG sudo kubeuser
    echo "kubeuser ALL=(ALL) NOPASSWD:ALL" >>/etc/sudoers
    mkdir -p /home/kubeuser/.ssh
    chmod 700 /home/kubeuser/.ssh
    chown kubeuser:kubeuser /home/kubeuser/.ssh
    mv /tmp/kubeuser/id_rsa /home/kubeuser/.ssh
    chmod 600 /home/kubeuser/.ssh/id_rsa
    chown kubeuser:kubeuser /home/kubeuser/.ssh/id_rsa
    mv /tmp/kubeuser/authorized_keys /home/kubeuser/.ssh
    chmod 600 /home/kubeuser/.ssh/authorized_keys
    chown kubeuser:kubeuser /home/kubeuser/.ssh/authorized_keys

    swapoff -a
    echo '* libraries/restart-without-asking boolean true' | debconf-set-selections
    apt-get update

    echo "Setup preparation finished."
  permissions: '755'
###############################
# SCRIPT TO INSTALL
################################
- path: /tmp/install.sh
  content: |
    #!/bin/bash
    set -ex

    echo "Setup DOCKER starts."
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    apt-key fingerprint 0EBFCD88
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    apt-get -y install docker-ce={{variables.dockerversion}} docker-ce-cli={{variables.dockerversion}} containerd.io
    sudo usermod -aG docker kubeuser
    newgrp docker
    docker -v
    cat <<EOF | sudo tee /etc/docker/daemon.json
    {
      "exec-opts": ["native.cgroupdriver=systemd"],
      "log-driver": "json-file",
      "log-opts": {
      "max-size": "100m"
    },
    "storage-driver": "overlay2"
    }
    EOF
    sudo systemctl enable docker
    sudo systemctl daemon-reload
    sudo systemctl restart docker
    echo "Setup DOCKER finished."

    echo "Setup KUBERNETES starts."
    curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list && apt-get update
    apt-get install -y kubelet={{variables.kubernetesversion}}
    apt-get install -y kubectl={{variables.kubernetesversion}}
    apt-get install -y kubeadm={{variables.kubernetesversion}}
    echo "Setup KUBERNETES finished."

  permissions: '755'
###############################
# SCRIPT TO JOIN MASTER
################################
- path: /tmp/config.sh
  content: |
    #!/bin/bash
    set -ex

    echo "JOIN MASTER starts."
    IPADDRESS="{{getip('kubernetes-master')}}"
    SLAVEIP=$(ip add | awk '/inet/{print substr($2,1,length($2)-3)}' | grep -v 127.0.0. | grep -v ::1/ | head -n 1)

    su - kubeuser -c "ssh-keyscan $SLAVEIP > /home/kubeuser/.ssh/known_hosts"
    su - kubeuser -c "ssh-keyscan `hostname` >> /home/kubeuser/.ssh/known_hosts"
    su - kubeuser -c "ssh-keyscan localhost >> /home/kubeuser/.ssh/known_hosts"
    su - kubeuser -c "ssh-keyscan 0.0.0.0 >> /home/kubeuser/.ssh/known_hosts"
    su - kubeuser -c "ssh-keyscan $IPADDRESS >> /home/kubeuser/.ssh/known_hosts"
    su - kubeuser -c "scp -r kubeuser@$IPADDRESS:/tmp/joinslave.txt /tmp/joinslave.txt"
    sh /tmp/joinslave.txt

    echo "JOIN MASTER finished."
  permissions: '755'
packages:
 - apt-transport-https
 - ca-certificates
 - curl
 - gnupg-agent
 - software-properties-common
runcmd:
- /tmp/initial.sh && /tmp/install.sh && /tmp/config.sh && echo "KUBERNETES SLAVE DEPLOYMENT DONE." || "\ePROBLEM OCCURED WITH THE INSTALLATION\e"
